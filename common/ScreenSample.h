// ======================================================================== //
// Copyright 2009-2016 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "Ray.h"

#include <array>

namespace ospray {
  namespace cpp_renderer {

    struct ScreenSample
    {
      // input values to 'renderSample'
      ospcommon::vec3i sampleID; /*!< x/y=pixelID,z=accumID/sampleID */
      Ray              ray;      /*!< the primary ray generated by the camera */
      // return values from 'renderSample'
      ospcommon::vec3f rgb {0.f, 0.f, 0.f};
      float alpha{0.f};
      float z{inf};
      int tileOffset{-1};// linear value --> comes from tileX,tileY
    };

    template <int SIZE>
    struct ScreenSampleStreamN
    {
      static constexpr int size = SIZE;

      std::array<ospcommon::vec3i, SIZE> sampleID;

      RayStreamN<SIZE> rays;

      std::array<ospcommon::vec3f, SIZE> rgb;
      std::array<float, SIZE> alpha;
      std::array<float, SIZE> z;
      std::array<int, SIZE> tileOffset;
    };

    using ScreenSampleStream = ScreenSampleStreamN<RENDERTILE_PIXELS_PER_JOB>;

  }// namespace cpp_renderer
}// namespace ospray
